services:
  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: loopify-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: spotify_auth_db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - loopify-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:7.0-alpine
    container_name: loopify-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - loopify-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application Service
  web:
    image: keithcho/loopify:latest
    container_name: loopify-app
    ports:
      - "8080:8080"
    environment:
      # Spotify OAuth Credentials
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}

      # Database Configuration
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/spotify_auth_db
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}

      # Redis Configuration
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}

      # Encryption Secret
      - APP_ENCRYPTION_SECRET=${APP_ENCRYPTION_SECRET}

      # Gemini AI API Key
      - GEMINI_API_KEY=${GEMINI_API_KEY}

      # Frontend URL for CORS
      - APP_FRONTEND_URL=http://localhost:4200
      - SPOTIFY_REDIRECT_URI=http://localhost:8080/api/auth/spotify/callback
    networks:
      - loopify-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    container_name: loopify-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - loopify-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - web

  # Grafana Service
  grafana:
    image: grafana/grafana:latest
    container_name: loopify-grafana
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - loopify-network
    depends_on:
      - prometheus

networks:
  loopify-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
  prometheus-data:
  grafana-data: